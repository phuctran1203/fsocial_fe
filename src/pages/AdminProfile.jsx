import React, { useState, useRef } from "react";
import { Field, Select } from "../components/Field";
import Button from "../components/Button";

import { adminStore } from "../store/adminStore";

const currentYear = new Date().getFullYear(); // üîπ ƒê·ªãnh nghƒ©a bi·∫øn nƒÉm hi·ªán t·∫°i
import {
	EyeIcon,
	EyeSplashIcon,
	LoadingIcon,
	UserIcon,
	XMarkIcon,
	AtIcon,
	LogoNoBG,
} from "../components/Icon";
import {
	combineIntoAvatarName,
	combineIntoDisplayName,
} from "@/utils/combineName";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";

const AdminProfile = () => {
	const { form, updateField } = adminStore();

	// Handle ·∫©n hi·ªán m·∫≠t kh·∫©u
	const [isShowPassword, setIsShowPassword] = useState(false);
	const [showOldPassword, setShowOldPassword] = useState(false);
	const [showNewPassword, setShowNewPassword] = useState(false);
	const [showConfirmPassword, setShowConfirmPassword] = useState(false);

	const fileInputRef = useRef(null);

	// X·ª≠ l√Ω thay ƒë·ªïi d·ªØ li·ªáu nh·∫≠p v√†o
	const handleChange = (field, value) => {
		setUserData((prev) => ({ ...prev, [field]: value }));
	};

	const handleImageUpload = (event) => {
		const file = event.target.files[0];
		if (file) {
			const imageUrl = URL.createObjectURL(file);
			updateField("avatar", { value: imageUrl });
		}
	};

	// **üîπ H√†m x·ª≠ l√Ω c·∫≠p nh·∫≠t th√¥ng tin v√†o store**
	const handleUpdateProfile = () => {
		// Ki·ªÉm tra m·∫≠t kh·∫©u tr∆∞·ªõc khi c·∫≠p nh·∫≠t
		if (
			userData.newPassword &&
			userData.newPassword !== userData.confirmPassword
		) {
			alert("M·∫≠t kh·∫©u m·ªõi kh√¥ng kh·ªõp!");
			return;
		}

		alert("C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!");
	};

	const hours = new Date().getHours();

	return (
		<div className="relative overflow-hidden bg-background shadow border rounded-lg flex-grow p-10">
			<LogoNoBG
				className="absolute left-0 bottom-0 translate-y-1/3 -rotate-12 size-56"
				fill="fill-gray-3light"
			/>
			{/* Ti√™u ƒë·ªÅ */}
			<h5>
				{hours < 12 && "Ch√†o bu·ªïi s√°ng"}
				{hours <= 18 && "Ch√†o bu·ªïi chi·ªÅu"}
				{hours > 18 && "Ch√†o bu·ªïi t·ªëi"},{" "}
				<font className="text-primary-gradient">
					{combineIntoDisplayName(form.ten.value, form.ho.value)}
				</font>
				üëã
			</h5>
			<p className="text-gray fs-sm">
				C·∫≠p nh·∫≠t th√¥ng tin c·ªßa b·∫°n t·∫°i ƒë√¢y. Kh√¥ng chia s·∫ª th√¥ng tin ƒë·ªÉ tr√°nh r·ªßi
				ro ph√°t sinh.
			</p>

			{/* Form ch·ªânh s·ª≠a */}
			<div className="max-w-[1080px] mx-auto grid grid-cols-2 gap-10 mt-12">
				{/* th√¥ng tin c√° nh√¢n */}
				<div className="space-y-5">
					<p className="font-medium">Th√¥ng tin c√° nh√¢n</p>

					<div className="grid grid-cols-2 gap-2">
						<Field
							label="T√™n"
							id="ten"
							required={true}
							pattern="^[A-Za-z√Ä-·ªπ\s]+$"
							errorMessage="T√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng v√† ch·ªâ ch·ª©a ch·ªØ c√°i."
							store={adminStore}
						/>
						<Field
							label="H·ªç"
							id="ho"
							required={true}
							pattern="^[A-Za-z√Ä-·ªπ\s]+$"
							errorMessage="H·ªç kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng v√† ch·ªâ ch·ª©a ch·ªØ c√°i."
							store={adminStore}
						/>
					</div>

					<div className="grid grid-cols-3 gap-2">
						<Select
							name="day"
							id="day"
							label="Ng√†y"
							store={adminStore}
							disable={true}
							options={Array.from(
								{ length: 31 },
								(_, index) => index + 1
							).reduce((acc, num) => {
								acc[num] = num;
								return acc;
							}, {})}
						/>
						<Select
							name="month"
							id="month"
							label="Th√°ng"
							store={adminStore}
							disable={true}
							options={Array.from(
								{ length: 12 },
								(_, index) => index + 1
							).reduce((acc, num) => {
								acc[num] = num;
								return acc;
							}, {})}
						/>
						<Select
							name="year"
							id="year"
							label="NƒÉm"
							store={adminStore}
							disable={true}
							options={Array.from(
								{ length: new Date().getFullYear() - 19 - 1940 + 1 },
								(_, index) => 1940 + index
							).reduce((acc, num) => {
								acc[num] = num;
								return acc;
							}, {})}
						/>
					</div>

					<Select
						store={adminStore}
						id="gender"
						label="Gi·ªõi t√≠nh"
						name="gender"
						options={{
							0: "Nam",
							1: "N·ªØ",
							2: "Kh√°c",
							3: "Kh√¥ng mu·ªën ti·∫øt l·ªô",
						}}
					/>

					{/* Avatar + Button thay ·∫£nh ƒë·∫°i di·ªán */}
					<div className="p-6 flex items-center gap-6">
						<div className="ring-4 ring-offset-4 rounded-full ring-gray-2light">
							<Avatar className="size-32">
								<AvatarImage src={form.avatar.value} />
								<AvatarFallback>
									{combineIntoAvatarName(form.ten.value, form.ho.value)}
								</AvatarFallback>
							</Avatar>
						</div>

						<label className="btn-secondary w-fit px-8 py-3 cursor-pointer">
							Thay ·∫£nh ƒë·∫°i di·ªán
							<input
								type="file"
								className="hidden"
								onChange={handleImageUpload} //  C·∫≠p nh·∫≠t avatar khi ch·ªçn ·∫£nh m·ªõi
							/>
						</label>
					</div>
				</div>

				<div className="space-y-8">
					{/* th√¥ng tin ƒëƒÉng nh·∫≠p */}
					<div className="space-y-5">
						<p className="font-medium">Th√¥ng tin ƒëƒÉng nh·∫≠p</p>
						<Field
							store={adminStore}
							id="username"
							label="T√™n ƒëƒÉng nh·∫≠p"
							name="username"
						>
							<UserIcon />
						</Field>

						<Field
							label="Email"
							id="email"
							type="email"
							required={true}
							pattern="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
							//  compareFunction={async (value) => !(await checkDuplicate(value))} // ph√∫c kt ch·ªó n√†y nh√© hihi (kt email ƒë√£ t·ªìn t·∫°i ch∆∞a)
							errorMessage="Email kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ t·ªìn t·∫°i."
							store={adminStore}
						>
							<AtIcon />
						</Field>
					</div>
					{/* ƒê·ªïi m·∫≠t kh·∫©u */}
					<div className="space-y-5">
						{/* ƒê·ªïi m·∫≠t kh·∫©u */}
						<p className="font-medium">ƒê·ªïi m·∫≠t kh·∫©u</p>
						<Field
							type={showOldPassword ? "text" : "password"}
							store={adminStore}
							id="oldPassword"
							label="M·∫≠t kh·∫©u c≈©"
							name="oldPassword"
						>
							<div
								onClick={() => setShowOldPassword(!showOldPassword)}
								className="cursor-pointer"
							>
								{showOldPassword ? (
									<EyeSplashIcon className="w-full" />
								) : (
									<EyeIcon className="w-full" />
								)}
							</div>
						</Field>

						<Field
							type={showNewPassword ? "text" : "password"}
							store={adminStore}
							id="newPassword"
							label="M·∫≠t kh·∫©u m·ªõi"
							required={true}
							pattern="^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).{8,}$"
							errorMessage="M·∫≠t kh·∫©u m·ªõi ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±, bao g·ªìm ch·ªØ hoa, ch·ªØ th∆∞·ªùng v√† s·ªë."
						>
							<div
								onClick={() => setShowNewPassword(!showNewPassword)}
								className="cursor-pointer"
							>
								{showNewPassword ? (
									<EyeSplashIcon className="w-full" />
								) : (
									<EyeIcon className="w-full" />
								)}
							</div>
						</Field>

						<Field
							type={showConfirmPassword ? "text" : "password"}
							store={adminStore}
							id="confirmPassword"
							label="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi"
							required={true}
							compareFunction={(value) => value === form.newPassword.value}
							errorMessage="M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp."
						>
							<div
								onClick={() => setShowConfirmPassword(!showConfirmPassword)}
								className="cursor-pointer"
							>
								{showConfirmPassword ? (
									<EyeSplashIcon className="w-full" />
								) : (
									<EyeIcon className="w-full" />
								)}
							</div>
						</Field>
					</div>
				</div>
			</div>

			{/* üîπ C·∫≠p nh·∫≠t th√¥ng tin khi ·∫•n n√∫t */}
			<div className="mt-6 flex justify-center">
				<Button
					onClick={handleUpdateProfile}
					className="btn-primary px-8 py-3 w-fit"
				>
					C·∫≠p nh·∫≠t thay ƒë·ªïi
				</Button>
			</div>
		</div>
	);
};

export default AdminProfile;
